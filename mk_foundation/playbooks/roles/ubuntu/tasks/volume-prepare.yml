---
# Setup a volume with base OS

- name: Fetch distribution hard disk image
  get_url:
    url: '{{ distro_image_urlhd00 }}'
    dest: '/mnt/{{ distro_image_basename }}.img'
    owner: 'root'
    group: 'root'
    mode: 0444

- name: Gather EC2 facts on build instance
  action: ec2_facts





- name: Creating new EBS work volume
  command: 'ec2-create-volume --region {{ ansible_ec2_placement_region }} --availability-zone {{ ansible_ec2_placement_availability_zone  }} --size {{ ami_root_size }}'
  register: amivol

- name: Saving Volume ID as a fact for later use
  set_fact:
    ami_ebs_volume_id: '{{ item.split("\t")[1] }}'
  with_items: amivol.stdout

- name: Attaching EBS work volume
  command: 'ec2-attach-volume --region {{ ansible_ec2_placement_region }} --device {{ ami_device_aws }} --instance "{{ ansible_ec2_instance_id }}" "{{ ami_ebs_volume_id }}"'


- name: Waiting for EBS work volume attachment to complete
  wait_for:
    path: '{{ ami_device }}'

- name: Writing disk image to volume
  command: 'qemu-img convert -O host_device /mnt/{{ distro_image_basename }}.img {{ ami_device }}'

- name: Scanning EBS volume for new partition table
  command: 'partprobe {{ ami_device }}'

# Don't use ansible module 'mount', as this is a transient thing
- name: Creating mount point for EBS volume
  file:
    path: '/mnt/{{ distro_image_basename }}'
    state: directory
    owner: root
    group: root
    mode: 0444

- name: Mount EBS volume for chroot
  command: 'mount {{ ami_device }}1 /mnt/{{ distro_image_basename }}'

- name: Mount /proc filesystem into chroot
  command: 'chroot /mnt/{{ distro_image_basename }} mount -t proc none /proc'

- name: Mount (bind) /dev filesystem into chroot
  command: 'mount -o bind /dev /mnt/{{ distro_image_basename }}/dev'

- name: Add resolv.conf to chroot environment
  copy:
    src: /etc/resolv.conf
    dest: '/mnt/{{ distro_image_basename }}/etc/resolv.conf'

- name: Disable rc.d for rest of the process.
  copy:
    src: policy-rc.d
    dest: '/mnt/{{ distro_image_basename }}/usr/sbin/policy-rc.d'
    owner: root
    group: root
    mode: 0755


