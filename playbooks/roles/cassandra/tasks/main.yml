---
# cassandra performance optimizations, based on Datastax best practices:
# http://www.datastax.com/documentation/cassandra/2.0/webhelp/index.html#cassandra/install/installRecommendSettings.html
- name: Install cassandra security limits profile
  template: src=cassandra-limits.conf dest=/etc/security/limits.d/cassandra.conf owner=root mode=0644

- name: Install cassandra sysctl settings
  copy: src=20-cassandra-vm.conf dest=/etc/sysctl.d/ owner=root mode=0644

- name: Install libjna-java jsvc and libcommons-daemon-java
  apt: pkg={{ item }} state=latest
  with_items:
    - libjna-java
    - jsvc
    - libcommons-daemon-java

# Only add user/group if someone's set an alternate user
- name: Add group cassandra
  group: name={{ cassandra_group }} system=yes
  when: cassandra_group == "cassandra"

- name: Add Cassandra user
  user: name={{ cassandra_user }} group={{ cassandra_group }} shell="/bin/sh" home={{ cassandra_home }} system=yes
  when: cassandra_user == "cassandra"

- name: Add ephemeral mkdir spec for cassandra role, used when no additional volumes present
  template: src=ephemeral-dirs dest=/etc owner=root mode=0644
  when: image_build

- name: Copy default buri device maps
  copy: src={{ item }} dest=/etc/ owner=root mode=0644
  with_fileglob:
    - buri-device-map-*

- name: Create cassandra base directory
  file: path={{ cassandra_base_location }} state=directory owner={{ cassandra_user }} group={{ cassandra_group }} mode=0755
  when: image_build

- name: Create cassandra log directory
  file: path={{ cassandra_log_location }} state=directory owner={{ cassandra_user }} group={{ cassandra_group }} mode=0755

- name: Create destination directories under /mnt
  file: path=/mnt{{ item }} state=directory owner={{ cassandra_user }} group={{ cassandra_group }} mode=0755
  with_items:
    - "{{ cassandra_data_location }}"
    - "{{ cassandra_cache_location }}"
    - "{{ cassandra_commitlog_location }}"
  when: image_build

- name: Create cassandra runtime symlinks
  file: src={{ item }} dest=/mnt{{ item }} state=link force=yes
  with_items:
    - "{{ cassandra_data_location }}"
    - "{{ cassandra_cache_location }}"
    - "{{ cassandra_commitlog_location }}"
  when: image_build

- include: acquire_build.yml

- name: Create cassandra install directory
  file: path={{ cassandra_installdir }} state=directory owner={{ cassandra_user }} group={{ cassandra_group }} mode=0755

- name: Extract cassandra release archive to install dir
  command: chdir={{ cassandra_installdir }} tar --strip-components 1 --no-same-owner -xzf /tmp/cassandra.tar.gz

- name: Set ownership of installed release archive
  file: path={{ cassandra_installdir }} state=directory recurse=yes owner={{ cassandra_user }} group={{ cassandra_group }}

- name: Removing cassandra home directory to be replaced with link
  file: path={{ cassandra_home }} state=absent

- name: Link cassandra home to install directory
  file: path={{ cassandra_home }} src={{ cassandra_installdir }} owner={{ cassandra_user }} group={{ cassandra_group }} state=link

- name: Link JNA into cassandra libs
  file: path={{ cassandra_home }}/lib/jna.jar src=/usr/share/java/jna.jar owner={{ cassandra_user }} group={{ cassandra_group }} state=link

- name: Install cassandra default settings file.
  template: src=cassandra-defaults dest=/etc/default/cassandra owner=root group=root mode=0644

- name: Add keystore to Cassandra
  copy: src={{ BURI_BASE }}/local/env/{{ buri_environment }}/cassandra_keystore dest={{ cassandra_home }}/conf/.keystore owner={{ cassandra_user }} group={{ cassandra_group }} mode=0440

- name: Add truststore to Cassandra
  copy: src={{ BURI_BASE }}/local/env/{{ buri_environment }}/cassandra_truststore dest={{ cassandra_home }}/conf/.truststore owner={{ cassandra_user }} group={{ cassandra_group }} mode=0440

- name: Install initial cassandra.yaml (1.2)
  template: src=cassandra.yaml dest={{ cassandra_home }}/conf/cassandra.yaml owner={{ cassandra_user }} group={{ cassandra_group }} mode=0755
  when: cassandra_version|truncate(2, True, end="") == "1."

- name: Install initial cassandra.yaml (2.0)
  template: src=cassandra-2.yaml dest={{ cassandra_home }}/conf/cassandra.yaml owner={{ cassandra_user }} group={{ cassandra_group }} mode=0755
  when: cassandra_version|truncate(4, True, end="") == "2.0."

- name: Install initial cassandra.yaml (2.1)
  template: src=cassandra-2.1.yaml dest={{ cassandra_home }}/conf/cassandra.yaml owner={{ cassandra_user }} group={{ cassandra_group }} mode=0755
  when: cassandra_version|truncate(4, True, end="") == "2.1."

- name: Install cassandra init script (1.2.x)
  template: src=cassandra-init.sh dest=/etc/init.d/cassandra owner=root group=root mode=0755
  when: cassandra_version|truncate(2, True, end="") != "1."

- name: Install cassandra init script (2.0.x)
  template: src=cassandra-2.0-init.sh dest=/etc/init.d/cassandra owner=root group=root mode=0755
  when: cassandra_version|truncate(4, True, end="") == "2.0."

- name: Install cassandra init script (2.1.x)
  template: src=cassandra-2.1-init.sh dest=/etc/init.d/cassandra owner=root group=root mode=0755
  when: cassandra_version|truncate(4, True, end="") == "2.1."

# 256k is the default used in 2.1.16, but replace it for older verisons, too
- name: Bump up stack size in cassandra launch scripts
  lineinfile: dest={{ cassandra_home }}/conf/cassandra-env.sh regexp='^(.*)Xss(\d+)k(.*)$' line='\1Xss256k\3' backrefs=yes

# FIXME: this seems off, needs non cloud version
- name: Make sure jmxremote authentication is false
  replace:
    dest: '{{ cassandra_home }}/conf/cassandra-env.sh'
    regexp: '.*JVM_OPTS -Dcom.sun.management.jmxremote.authenticate=true"$'
    replace: '  JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.authenticate=false"'
  when: cloud_target == "amazon"

- name: Remove jmxremote password
  lineinfile:
    dest: '{{ cassandra_home }}/conf/cassandra-env.sh'
    regexp: '^  JVM_OPTS="\$JVM_OPTS -Dcom.sun.management.jmxremote.password.file=/etc/cassandra/jmxremote.password"'
    state: absent
  when: cloud_target == "amazon"

- name: Setup RMI hostname for remote JMX
  lineinfile:
    dest: '{{ cassandra_home }}/conf/cassandra-env.sh'
    line: '  JVM_OPTS="$JVM_OPTS -Djava.rmi.server.hostname=$(curl -s http://169.254.169.254/latest/meta-data/local-hostname)"'
    insertafter: '^  JVM_OPTS="\$JVM_OPTS -Dcom.sun.management.jmxremote.authenticate=false"$'
    regexp: '^  JVM_OPTS="\$JVM_OPTS -Djava.rmi.server.hostname=\$(curl -s http://169.254.169.254/latest/meta-data/local-hostname)"'
    state: present
  when: cloud_target == "amazon"

- include: stargate_core.yml
  when: cassandra_stargate

- include: riemann_report.yml
  when: cassandra_enable_riemann_report

- name: Disable Cassandra service on boot (Priam managed)
  command: update-rc.d cassandra disable
  when: image_build

- name: Copy cassandra_status.py to its directory
  template: src=cassandra_status.py dest={{ cassandra_home }}/cassandra_status.py owner=jetty group=jetty mode=0755 force=yes

- name: Create cronjob for Cassandra status script
  cron: name="Cassandra cluster status metric to AWS"
        user=jetty job={{ cassandra_home }}/cassandra_status.py

- name: If cassandra is running drain
  shell: '(netstat -tunlp|grep ":9042" && {{ cassandra_home }}/bin/nodetool drain) || true'
  when: not image_build

- name: Stop Cassandra service
  command: service cassandra stop
  when: not image_build

#- name: Start Cassandra service
#  command: service cassandra start
#  when: not image_build

#- name: Wait for cassandra to be up
#  wait_for: port=7199 delay=20 timeout=120
#  when: not image_build

# if sstables don't need upgrading this will do nothing
#- name: Upgrade sstables
#  command: '{{ cassandra_home }}/bin/nodetool upgradesstables'
#  when: not image_build
