---
- name: Install packages for gitolite role
  apt: pkg={{ item }} state=latest
  with_items:
    - git

- name: Add git group
  group: name={{ gitolite_group }} system=yes

- name: Add git user
  user: name={{ gitolite_user }} group={{ gitolite_group }} shell="/bin/sh" home={{ gitolite_home }} system=yes

- name: Checkout code from Git
  git: repo={{ gitolite_git_repo }}
       dest={{ gitolite_home }}/gitolite
       version={{ gitolite_git_ref }}
       accept_hostkey=true
  sudo: yes
  sudo_user: "{{ gitolite_user }}"
  register: git_clone
  #when: gitolite_build_source

- name: Ensure gitolite .ssh exists
  file: path={{ gitolite_home }}/.ssh state=directory owner={{ gitolite_user }} group={{ gitolite_group }} mode=0700

- name: Add user bin folder for git user
  file: path={{ gitolite_home }}/bin state=directory owner={{ gitolite_user }} group={{ gitolite_group }} mode=0755

- name: Install gitolite binaries
  command: chdir={{ gitolite_home }} {{ gitolite_home }}/gitolite/install -to {{ gitolite_home }}/bin
  sudo: yes
  sudo_user: "{{ gitolite_user }}"
  when: git_clone.changed

- name: Generate SSH-key
  command: ssh-keygen -t rsa -N "" -f {{ gitolite_home }}/gitolite_admin_id_rsa creates={{ gitolite_home }}/gitolite_admin_id_rsa
  sudo: yes
  sudo_user: "{{ gitolite_user }}"

- name: Setup Gitolite
  command: "{{ gitolite_home }}/bin/gitolite setup -pk {{ gitolite_home }}/gitolite_admin_id_rsa.pub creates={{ gitolite_home }}/repositories"
  sudo: yes
  sudo_user: "{{ gitolite_user }}"

- name: Enable hooks in gitolite
  lineinfile:
    dest: "{{ gitolite_home }}/.gitolite.rc"
    state: present
    regexp: GIT_CONFIG_KEYS
    line: GIT_CONFIG_KEYS => '.*',

- name: Setup git-daemon launcher
  template: src=git_daemon.txt dest=/etc/init.d/git-daemon owner=root group=root mode=755
  notify: restart git-daemon

- name: Inform rc.d subsystem to add git-daemon
  command: update-rc.d -f git-daemon defaults
  notify: restart git-daemon

