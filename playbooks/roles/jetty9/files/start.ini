--module=setuid
jetty.startServerAsPrivileged=false
jetty.username=jetty
jetty.groupname=jetty
jetty.umask=002

# Enable security via jaas, and configure it
#--module=jaas
#jaas.login.conf=etc/login.conf

# Enable rewrite examples
#--module=rewrite
#etc/demo-rewrite-rules.xml

# Websocket chat examples needs websocket enabled
# Don't start for all contexts (set to true in test.xml context)
#org.eclipse.jetty.websocket.jsr356=false
#--module=websocket
# Create and configure the test realm
#etc/test-realm.xml
#demo.realm=etc/realm.properties

#
# Initialize module server
#
--module=server
##
## Server Threading Configuration
##
# minimum number of threads
threads.min=10
# maximum number of threads
threads.max=200
# thread idle timeout in milliseconds
threads.timeout=60000
# buffer size for output
jetty.output.buffer.size=32768
# request header buffer size
jetty.request.header.size=8192
# response header buffer size
jetty.response.header.size=8192
# should jetty send the server version header?
jetty.send.server.version=true
# should jetty send the date header?
jetty.send.date.header=false
# What host to listen on (leave commented to listen on all interfaces)
#jetty.host=myhost.com
# Dump the state of the Jetty server, components, and webapps after startup
jetty.dump.start=false
# Dump the state of the Jetty server, before stop
jetty.dump.stop=false

#
# Initialize module continuation
#
--module=continuation

#
# Initialize module deploy
#
--module=deploy
## DeployManager configuration
# Monitored Directory name (relative to jetty.base)
# jetty.deploy.monitoredDirName=webapps

#
# Initialize module ext
#
--module=ext

#
# Initialize module resources
#
--module=resources

#
# Initialize module client
#
--module=client

#
# Initialize module annotations
#
--module=annotations

#
# Initialize module servlets
#
--module=servlets
#
# HTTP connector
#
--module=http
jetty.port=8080

#
# Initialize module https
#
#--module=https
## HTTPS Configuration
# HTTP port to listen on
#https.port=443
# HTTPS idle timeout in milliseconds
#https.timeout=30000
# HTTPS Socket.soLingerTime in seconds. (-1 to disable)
# https.soLingerTime=-1

#
# Initialize module jsp
#
--module=jsp
# JSP Configuration
# To use an non-jdk compiler for JSP compilation uncomment next line
# -Dorg.apache.jasper.compiler.disablejsr199=true
#
# Initialize module ssl
#
#--module=ssl
## SSL Keystore Configuration
# define the port to use for secure redirection
#jetty.secure.port=443
# Setup a demonstration keystore and truststore
#jetty.keystore=etc/keystore
#jetty.truststore=etc/keystore
# Set the demonstration passwords.
# Note that OBF passwords are not secure, just protected from casual observation
# See http://www.eclipse.org/jetty/documentation/current/configuring-security-secure-passwords.html
#jetty.keystore.password=OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
#jetty.keymanager.password=OBF:1u2u1wml1z7s1z7a1wnl1u2g
#jetty.truststore.password=OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
# Set the client auth behavior
# Set to true if client certificate authentication is required
# jetty.ssl.needClientAuth=true
# Set to true if client certificate authentication is desired
# jetty.ssl.wantClientAuth=true

#
# Initialize module jmx
#
--module=jmx

#
# Initialize module jmx-remote
#
--module=jmx-remote
## JMX Configuration
## Enable for an open port accessible by remote machines
# jetty.jmxrmihost=localhost
# jetty.jmxrmiport=1099
## Strictly speaking you shouldn't need --exec to use this in most environments.
## If this isn't working, make sure you enable --exec as well
# -Dcom.sun.management.jmxremote

