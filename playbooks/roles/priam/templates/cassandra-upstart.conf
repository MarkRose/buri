# derived from: https://gist.github.com/nikolavp/5488026

description "Cassandra is a distributed (peer-to-peer) system for the management and storage of structured data."
 
author "jhohertz@gmail.com"
 
#start on filesystem
#stop on runlevel[016]
manual 
 
 
env NAME=cassandra
env PIDFILE=/var/run/$NAME.pid
env JSVC=/usr/bin/jsvc
env WAIT_FOR_START=20
env CASSANDRA_HOME={{ cassandra_home }}
env CASSANDRA_CONF=$CASSANDRA_HOME/conf
 
respawn
# if we have respawned once in the last 20 seconds then just stop.
respawn limit 2 20
 
setuid {{ cassandra_user }}
setgid {{ servlet_container_group }}
 
console log
 
chdir /
 
# Redundant, using limits file
#limit nofile 100000 100000
#limit memlock unlimited unlimited
 
pre-start script
    [ -e /etc/default/$NAME ] || exit 0
    [ -e $CASSANDRA_CONF/cassandra.yaml ] || exit 0
    [ -e $CASSANDRA_CONF/cassandra-env.sh ] || exit 0
end script
 
script
    [ -r /etc/default/$NAME ] && . /etc/default/$NAME

    # Use JAVA_HOME if set, otherwise look for java in PATH
    if [ -n "$JAVA_HOME" ]; then
        JAVA="$JAVA_HOME/bin/java"
    else
        JAVA=/usr/bin/java
    fi

    # The java classpath (required)
    CLASSPATH="$CASSANDRA_CONF"
    [ "x$EXTRA_CLASSPATH" = "x" ] && CLASSPATH="$CLASSPATH:$EXTRA_CLASSPATH"

    for jar in "$CASSANDRA_HOME"/lib/*.jar; do
        CLASSPATH="$CLASSPATH:$jar"
    done

    # use JNA if installed in standard location
    # should already be picked up via symlink
    #[ -r /usr/share/java/jna.jar ] && CLASSPATH="$CLASSPATH:/usr/share/java/jna.jar"

    echo $CLASSPATH

    # If numactl is available, use it. For Cassandra, the priority is to
    # avoid disk I/O. Even for the purpose of CPU efficiency, we don't
    # really have CPU<->data affinity anyway. Also, empirically test that numactl
    # works before trying to use it (CASSANDRA-3245).
    NUMACTL_ARGS="--interleave=all"
    if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
    then
        NUMACTL="numactl $NUMACTL_ARGS"
    else
        NUMACTL=""
    fi

    # Read Cassandra environment file.
    . $CASSANDRA_CONF/cassandra-env.sh
 
    # Include the conf directory for purposes of log4j-server.properties, and
    # commons-daemon in support of the daemonization class.
    CLASSPATH="$CLASSPATH:/usr/share/java/commons-daemon.jar"
 
    cassandra_parms="-Dlog4j.configuration=log4j-server.properties -Dlog4j.defaultInitOverride=true"
    cassandra_parms="$cassandra_parms -Dcassandra-pidfile=$PIDFILE -Dcassandra-foreground=yes"

    classname="org.apache.cassandra.service.CassandraDaemon"

    exec $NUMACTL "$JAVA"  \
      -XX:HeapDumpPath="$cassandra_home/java_`date +%s`.hprof" \
      -XX:ErrorFile="$cassandra_home/hs_err_`date +%s`.log" \
      $JVM_OPTS $cassandra_parms -cp "$CLASSPATH" \
      $EXTRA_PROPS "$classname" >> {{ cassandra_log_location }}/output.log 2>&1
 
 
 
end script
 
post-start script
    for tries in `seq $WAIT_FOR_START`; do
        sleep 1
        nodetool status && exit 0
    done
end script

