---
- name: Install packages for supporting redmine
  apt: pkg={{ item }} state=latest
  with_items:
    - imagemagick
    - libmagickwand-dev
    - libicu-dev

- name: Install gems needed for redmine
  gem: name={{ item }} state=latest
  with_items:
   - lockfile
   - inifile
   - net-ssh
   - mysql2
   - rmagick
   - rdoc

- name: Install rails 3.2.x needed for redmine
  gem: name=rails state=present version=3.2.19

- name: Add redmine group
  group: name={{ redmine_group }} system=yes

- name: Add redmine user
  user: name={{ redmine_user }} group={{ redmine_group }} shell="/bin/sh" home={{ redmine_home }} system=yes

- name: Let redmine user sudo to gitolite user
  lineinfile: dest=/etc/sudoers state=present regexp='^redmine\s+ALL=\(git\)\s+NOPASSWD:ALL' line='redmine  ALL=(git)      NOPASSWD:ALL' validate='visudo -cf %s'

- name: Let git user sudo to redmine user
  lineinfile: dest=/etc/sudoers state=present regexp='^git\s+ALL=\(redmine\)\s+NOPASSWD:ALL' line='git      ALL=(redmine)  NOPASSWD:ALL' validate='visudo -cf %s'

- name: Ensure redmine .ssh exists
  file: path={{ redmine_home }}/.ssh state=directory owner={{ redmine_user }} group={{ redmine_group }} mode=0700

- name: Generate SSH-key
  command: ssh-keygen -t rsa -N "" -f {{ redmine_home }}/.ssh/redmine_gitolite_admin_id_rsa creates={{ redmine_home }}/.ssh/redmine_gitolite_admin_id_rsa
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Give ssh pub file to gitolite 
  command: cp {{ redmine_home }}/.ssh/redmine_gitolite_admin_id_rsa.pub {{ gitolite_home }}/redmine_gitolite_admin_id_rsa.pub

- name: Set permissions on gitolite authorized_keys file
  file: path={{ gitolite_home }}/redmine_gitolite_admin_id_rsa.pub state=file owner={{ gitolite_user }} group={{ gitolite_group }} mode=0600

- name: Setup Gitolite for Redmine
  command: "{{ gitolite_home }}/bin/gitolite setup -pk {{ gitolite_home }}/redmine_gitolite_admin_id_rsa.pub creates={{ gitolite_home }}/repositories"
  sudo: yes
  sudo_user: "{{ gitolite_user }}"

- name: Enable hooks in gitolite
  lineinfile: 
    dest: "{{ gitolite_home }}/.gitolite.rc"
    state: present
    regexp: GIT_CONFIG_KEYS
    line: GIT_CONFIG_KEYS => '.*',

- include: acquire_build.yml

- name: Ensure redmine app base exists
  file: path={{ redmine_home }}/app state=directory owner={{ redmine_user }} group={{ redmine_group }} mode=0711

# This is messy due to build differences

- name: Ensure redmine app folder exists
  file: path={{ redmine_home }}/app/redmine state=directory owner={{ redmine_user }} group={{ redmine_group }} mode=0711
  when: redmine_build_source

- name: Install redmine (from source)
  command: tar zxvf /tmp/redmine.tgz -C {{ redmine_home }}/app/redmine
  when: redmine_build_source

- name: Extract build (from url build)
  command: tar zxvf /tmp/redmine.tgz -C {{ redmine_home }}/app
  when: not redmine_build_source

- name: Rename build folder
  command: mv {{ redmine_home }}/app/redmine-{{ redmine_version }} {{ redmine_home }}/app/redmine
  when: not redmine_build_source

- name: Ensure redmine user owns redmine app folder
  file: path={{ redmine_home }}/app/redmine state=directory recurse=yes owner={{ redmine_user }} group={{ redmine_group }}

- name: Create redmine database
  mysql_db: name={{ item }} state=present
  with_items:
    - "{{ redmine_db_name }}"
    - "{{ redmine_db_name }}_dev"
    - "{{ redmine_db_name }}_test"

- name: Setup redmine MySQL user
  mysql_user: user={{ redmine_db_user }} password={{ redmine_db_password }} priv={{ redmine_db_name }}.*:ALL/{{ redmine_db_name }}_dev.*:ALL/{{ redmine_db_name }}_test.*:ALL host=localhost
  
- name: Setup redmine database configuration file 
  template: src=database.yml dest={{ redmine_home }}/app/redmine/config/database.yml owner={{ redmine_user }} group={{ redmine_group }} mode=0400

- name: Checkout Git repo plugin for redmine
  git: repo={{ redmine_git_plugin_repo }}
       dest={{ redmine_home}}/app/redmine/plugins/redmine_git_hosting
       version={{ redmine_git_plugin_ref }}
       accept_hostkey=true
  sudo: yes
  sudo_user: "{{ redmine_user }}"
  register: git_clone

- name: Checkout bootstrap kit plugin for redmine
  git: repo={{ redmine_bootstrap_kit_repo }}
       dest={{ redmine_home}}/app/redmine/plugins/redmine_bootstrap_kit
       version={{ redmine_bootstrap_kit_ref }}
       accept_hostkey=true
  sudo: yes
  sudo_user: "{{ redmine_user }}"
  register: git_clone

# after db config, as it installs based on it
- name: Run bundle install
  command: chdir={{ redmine_home }}/app/redmine bundle install --path vendor/bundle --without development test
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Run generate secret token
  command: chdir={{ redmine_home }}/app/redmine rake generate_secret_token
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Run db migrate
  shell: chdir={{ redmine_home }}/app/redmine RAILS_ENV=production rake db:migrate
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Run db import default data
  shell: chdir={{ redmine_home }}/app/redmine RAILS_ENV=production REDMINE_LANG=en rake redmine:load_default_data
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Run redmine plugins migrate
  shell: chdir={{ redmine_home }}/app/redmine RAILS_ENV=production rake redmine:plugins:migrate
  sudo: yes
  sudo_user: "{{ redmine_user }}"

#- name: Run redmine plugins version change process
#  shell: chdir={{ redmine_home }}/app/redmine RAILS_ENV=production rake redmine:plugins:process_version_change
#  sudo: yes
#  sudo_user: "{{ redmine_user }}"

- name: Setup redmine ssh config
  template: src=ssh_config dest={{ redmine_home }}/.ssh/config owner={{ redmine_user }} group={{ redmine_group }} mode=0600

- name: Set redmine git user name
  command: git config --global user.name "{{ redmine_user_name }}"
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Set redmine git user email
  command: git config --global user.name "{{ redmine_user_email }}"
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Set redmine git confug push.default to simple
  command: git config --global push.default simple
  sudo: yes
  sudo_user: "{{ redmine_user }}"

- name: Setup redmine-git-hosting plugin config
  template: src=init.rb dest={{ redmine_home }}/app/redmine/plugins/redmine_git_hosting/init.rb owner={{ redmine_user }} group={{ redmine_group }} mode=0600

- name: Checkout Git repo for gitolite admin, initialize hostkey
  git: repo=git@{{ redmine_ssh_domain }}:gitolite-admin
       dest={{ redmine_home}}/gl_admin_co
       accept_hostkey=true

- name: Setup redmine thin config
  template: src=thin_redmine.yml dest=/etc/thin/redmine.yml owner=root group={{ redmine_group }} mode=0640
  notify: restart thin

- name: Add server ssl key to nginx
  copy: src={{ buri_environment }}/local/redmine_server.key dest=/etc/nginx/ssl/redmine_server.key owner=root group=root mode=0440
  notify: restart nginx

- name: Add server ssl certificate to nginx
  copy: src={{ buri_environment }}/local/redmine_server.crt dest=/etc/nginx/ssl/redmine_server.crt owner=root group=root mode=0440
  notify: restart nginx

- name: Setup redmine nginx config
  template: src=redmine-nginx.conf dest=/etc/nginx/sites-available/{{ redmine_http_domain }}.conf owner=root group=root mode=0644
  notify: restart nginx

- name: Activate redmine nginx config
  file: path=/etc/nginx/sites-enabled/{{ redmine_http_domain }}.conf src=/etc/nginx/sites-available/{{ redmine_http_domain }}.conf state=link owner=root group=root
  notify: restart nginx


