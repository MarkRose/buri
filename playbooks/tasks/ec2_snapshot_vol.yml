---
# Not using snapshot module from ansible, as supporting 1.4.4 is needed
- name: Create snapshot from EBS volume
  #command: 'ec2-create-snapshot --region {{ ansible_ec2_placement_region }} --description "{{ ami_description }}" "{{ ebs_volume_id }}"'
  command: 'aws ec2 create-snapshot --region {{ ansible_ec2_placement_region }} --description "{{ ami_description }}" --volume-id "{{ ebs_volume_id }}" --output text'
  register: snap

- name: Saving Snapshot ID as a fact for later use
  set_fact:
    ebs_snapshot_id: '{{ item.split("\t")[3] }}'
  with_items: snap.stdout

- name: Waiting for completion of snapshot
  #command: 'ec2-describe-snapshots --region {{ ansible_ec2_placement_region }} "{{ ebs_snapshot_id }}"'
  command: 'aws ec2 describe-snapshots --region {{ ansible_ec2_placement_region }} --snapshot-ids {{ ebs_snapshot_id }} --output text'
  register: result
  until: result.stdout.find("pending") == -1
  retries: 60
  delay: 3

- name: Tagging snapshot
  #command: 'ec2-create-tags --region {{ ansible_ec2_placement_region }} {{ ebs_snapshot_id }} --tag Name="{{ ami_name }} AMI"'
  command: 'aws ec2 create-tags --region {{ ansible_ec2_placement_region }} --resources "{{ ebs_snapshot_id }}" --tags "[{\"Key\":\"Name\",\"Value\":\"{{ ami_name }} EBS AMI\"}]"


